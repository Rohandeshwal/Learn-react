{"version":3,"sources":["Components/NavigationMenu.js","Components/Navigation.js","Components/Header.js","Components/Footer.js","Components/loader.js","Components/ProductCard.js","Views/Home.js","Hooks/HttpRequests.js","Views/About.js","Views/Product.js","App.js","serviceWorker.js","index.js"],"names":["NavigationMenu","props","className","to","onClick","closeMenu","Navigation","useState","showMenu","setShowMenu","Masktransitions","useTransition","from","position","opacity","enter","leave","Menutransitions","transform","icon","faBars","map","item","key","div","style","Header","Footer","loader","ProductCard","product","id","images","imageUrl","name","price","description","Home","products","url","loading","data","error","request","setRequest","useEffect","axios","get","then","response","catch","useAxiosGet","content","href","About","Product","useParams","URL","setProduct","src","alt","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.4d948de7.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction NavigationMenu(props){\r\n    return(\r\n        <div>\r\n               <div className=\"font-bold py-3\"> App Names</div>\r\n                  <ul>\r\n                      <li>\r\n                          <Link to =\"/\" className=\"text-blue-500 py-3 border-t border-b block\" \r\n                          onClick={props.closeMenu}>\r\n                          Home</Link> </li>\r\n                      <li>\r\n                          <Link to =\"/about\" className=\"text-blue-500 py-3 border-b border-t block\" \r\n                          onClick={props.closeMenu}>\r\n                          About</Link> </li>\r\n                  </ul>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default NavigationMenu","import React, { useState } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\r\nimport { useTransition, animated } from 'react-spring';\r\nimport NavigationMenu from './NavigationMenu';\r\n\r\n\r\nfunction Navigation() {\r\n    const [showMenu, setShowMenu] = useState(false)\r\n\r\n    const Masktransitions = useTransition(showMenu, null, {\r\n        from: { position: 'absolute', opacity: 0 },\r\n        enter: { opacity: 1 },\r\n        leave: { opacity: 0 },\r\n    })\r\n    const Menutransitions = useTransition(showMenu, null, {\r\n        from: { opacity:0, transform:'translateX(-100%)' },\r\n        enter: { opacity:1, transform:'translateX(0%)' },\r\n        leave: { opacity:0, transform:'translateX(-100%)' }\r\n      \r\n    })\r\n\r\n\r\n    return (\r\n        <nav>\r\n            <span className=\"text-xl\"> <FontAwesomeIcon\r\n                icon={faBars}\r\n                onClick={() => setShowMenu(!showMenu)}\r\n            /> </span>\r\n            {\r\n                Masktransitions.map(({ item, key, props }) =>\r\n                    item && <animated.div key={key} style={props}\r\n                    className=\"bg-black-t-50 fixed top-0  left-0  w-full h-full z-50\" \r\n                    onClick={()=> setShowMenu(false)}>\r\n                  \r\n                    </animated.div>\r\n                )\r\n            }\r\n            {\r\n                Menutransitions.map(({ item, key, props }) =>\r\n                    item && <animated.div key={key} style={props}\r\n                        className= \"fixed bg-white top-0 left-0 w-4/5 h-full z-50 shadow p-3\" >\r\n               <NavigationMenu \r\n               closeMenu={()=> setShowMenu(false)}\r\n               />\r\n                    </animated.div> \r\n                )\r\n            }\r\n        </nav>\r\n    )\r\n}\r\nexport default Navigation","import React from 'react'\r\nimport Navigation from './Navigation'\r\n\r\nfunction Header(){\r\n    return (<header className=\"border-b font-bold p-3 flex justify-between item-center\">\r\n        AppName\r\n< Navigation/>\r\n    </header>\r\n    \r\n    )\r\n}\r\nexport default Header","import React from 'react'\r\nfunction Footer(){\r\n    return (<footer className=\"bg-gray-200 text-center text-xs p-3 absolute bottom-0 w-full\">\r\n  @copyright@2020\r\n\r\n    </footer>)\r\n}\r\nexport default Footer","import React  from 'react';\r\n\r\n function loader()  {\r\n    \r\n        return (\r\n            <div className=\"flex justify-center\">\r\n<div className=\"loader\">  </div>                \r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\nexport default loader;\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\n;\r\n\r\n\r\nfunction ProductCard(props){\r\n\r\n    return (\r\n        <div className=\"border mb-4 rounded overflow-hidden\">\r\n            <Link to={`/products/${props.product.id}`}>\r\n                <div \r\n                    style={{\r\n                        'backgroundImage': `url('${props.product.images[0].imageUrl}')`,\r\n                    }}\r\n                    className=\"w-full h-64 bg-blue bg-cover\"\r\n                >\r\n                </div>\r\n            </Link>\r\n            <div className=\"p-3\">\r\n                <h3 className=\"font-bold text-xl mb-3\">\r\n                    <Link to={`/products/${props.product.id}`}>\r\n                        { props.product.name }\r\n                    </Link>    \r\n                </h3>\r\n                <div className=\"font-bold mb-3\">\r\n                    $ { props.product.price }\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    { props.product.description }\r\n                </div>\r\n                <Link \r\n                    to={`/products/${props.product.id}`}\r\n                    className=\"bg-blue-500 text-white p-2 flex justify-center w-full\"\r\n                >\r\n                    View\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default ProductCard;\r\n","import React from 'react'\r\nimport Loader from '../Components/loader'\r\nimport ProductCard from '../Components/ProductCard'\r\nimport { useAxiosGet } from '../Hooks/HttpRequests'\r\n\r\nfunction Home(){\r\n    // Create your own Mock API: https://mockapi.io/\r\n    const URL = `https://5ee4a7e9ddcea00016a36e5b.mockapi.io/ap/v1/products/?page=1&limit=10`; \r\n\r\n    let products = useAxiosGet(URL)\r\n    let content = null\r\n    if(products.error){\r\n        content = <div>\r\n            <div className=\"bg-blue-300 mb-2 p-3\">\r\n                If you see this error. Please remember to create your own <a href=\"https://mockapi.io/\">mock API</a>.\r\n            </div>\r\n            <div className=\"bg-red-300 p-3\">\r\n                There was an error please refresh or try again later.\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    if(products.loading){\r\n        content = <Loader></Loader>\r\n    }\r\n    if(products.data){\r\n        content = \r\n        products.data.map((product) => \r\n            <div key={product.id} className=\"flex-no-shrink w-full md:w-1/4 md:px-3\">\r\n                <ProductCard \r\n                    product={product}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"container mx-auto\">\r\n            <h1 className=\"font-bold text-2xl mb-3\">\r\n                Best Sellers\r\n            </h1>\r\n            <div className=\"md:flex flex-wrap md:-mx-3\">\r\n                { content } \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home","import {useEffect, useState} from 'react'\r\nimport axios from 'axios'\r\n// imp\r\nexport function useAxiosGet(url){\r\n    const [request, setRequest] = useState({\r\n        loading: false,\r\n        data: null,\r\n        error: false\r\n    })\r\n\r\n    useEffect(() => {\r\n        setRequest({\r\n            loading: true,\r\n            data: null,\r\n            error: false\r\n        })\r\n        axios.get(url)\r\n            .then(response => {\r\n                setRequest({\r\n                    loading: false,\r\n                    data: response.data,\r\n                    error: false\r\n                })\r\n            })\r\n            .catch(() => {\r\n                setRequest({\r\n                    loading: false,\r\n                    data: null,\r\n                    error: true\r\n                })\r\n            })\r\n    }, [url])\r\n\r\n    return request\r\n}\r\n","import React  from 'react';\r\n\r\nfunction About() {\r\n   \r\n        return (\r\n            <div>\r\n               \r\n               <h1 className=\"font-bold text-2xl mb-3\"> This is the About Page</h1> \r\n               <p>This is page Content</p>\r\n            </div>\r\n        )\r\n    \r\n}\r\n\r\nexport default About;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom'\r\nimport Loader from '../Components/loader';\r\n\r\nfunction Product() {\r\n    const { id } = useParams()\r\n    // mockApi Url\r\n    const URL = `https://5ee4a7e9ddcea00016a36e5b.mockapi.io/ap/v1/products/${id}`; \r\n    const [product, setProduct] = useState({\r\n        loading: false,\r\n        data: null,\r\n        error: false\r\n    })\r\n    let content = null;\r\n    // useFeect hooks ract\r\n    useEffect(() => {\r\n        setProduct({\r\n            loading: true,\r\n            data: null,\r\n            error: false\r\n        })\r\n        // axios used for routing\r\n        axios.get(URL).then(response => {\r\n            setProduct({\r\n                loading: false,\r\n                data: response.data,\r\n                error: false\r\n            })\r\n\r\n        }).catch(() => {\r\n            setProduct({\r\n                loading: false,\r\n                data: null,\r\n                error: true,\r\n            })\r\n        })\r\n    }, [URL]);\r\n    if (product.error) {\r\n        content = <p> Try Again later</p>\r\n    }\r\n    if (product.loading) {\r\n        content = <Loader> </Loader>\r\n    }\r\n\r\n    //getData for Mocks API\r\n    if (product.data) {\r\n        return (\r\n            content =\r\n            <div>\r\n                <h1 className=\"text-2xl font-bold mb-3\"> {product.data.name} </h1>\r\n\r\n                <div>\r\n                    <img\r\n                        src={product.data.images[0].imageUrl} alt={product.data.name} />\r\n                </div>\r\n                <div className=\"font-bold text-xl mb-3\">\r\n                    $ {product.data.price}\r\n                </div>\r\n                <div>\r\n                    {product.data.description}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {content}\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Product;\r\n","import React from 'react';\nimport { BrowserRouter as Router , Switch, Route, Link } from \"react-router-dom\";\n\n// import logo from './logo.svg';\nimport Header from './Components/Header';\nimport Footer from './Components/Footer';\nimport Home from './Views/Home';\nimport About from './Views/About';\nimport Product from './Views/Product';\n\n\nfunction App() {\n  return (\n    <div className=\"relative pb-10 min-h-screen\">\n     \n<Router>\n<Header />\n \n\n<div className=\"p-3\">\n<Switch>\n    <Route exact path=\"/\">\n      <Home />\n   </Route>\n    <Route path=\"/about\">\n      <About />\n    </Route>\n    <Route path=\"/products/:id\">\n      <Product />\n    </Route>\n</Switch> \n</div>\n<Footer />\n</Router>\n\n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './tailwind.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}